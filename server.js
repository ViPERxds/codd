const express = require('express');
const cors = require('cors');
const path = require('path');
const { connectDatabase } = require('./backend/config/database');
const { initContacts } = require('./scripts/init-contacts');
const { initProjects } = require('./scripts/init-projects');
const { initUsers } = require('./scripts/init-users');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
app.use((req, res, next) => {
    res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');
    res.setHeader('Pragma', 'no-cache');
    res.setHeader('Expires', '0');
    next();
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static('.'));
// –†–∞–∑–¥–∞—á–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const uploadsPath = path.join(__dirname, 'uploads');
app.use('/uploads', express.static(uploadsPath));

// API Routes (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∏)
app.use('/api/auth', require('./backend/routes/auth'));
app.use('/api/fines', require('./backend/routes/fines'));
app.use('/api/evacuations', require('./backend/routes/evacuations'));
app.use('/api/traffic-lights', require('./backend/routes/trafficLights'));
app.use('/api/accidents', require('./backend/routes/accidents'));
app.use('/api/news', require('./backend/routes/news'));
app.use('/api/documents', require('./backend/routes/documents'));
app.use('/api/projects', require('./backend/routes/projects'));
app.use('/api/transport', require('./backend/routes/transport'));
app.use('/api/services', require('./backend/routes/services'));
app.use('/api/orders', require('./backend/routes/orders'));
app.use('/api/vacancies', require('./backend/routes/vacancies'));
app.use('/api/contacts', require('./backend/routes/contacts'));
app.use('/api/search', require('./backend/routes/search'));

// –ù–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use('/api/fines-analytics', require('./backend/routes/finesAnalytics'));
app.use('/api/evacuation-analytics', require('./backend/routes/evacuationAnalytics'));
app.use('/api/evacuation-routes', require('./backend/routes/evacuationRoutes'));

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'index.html'));
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ error: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!' });
});

// 404 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
app.use((req, res) => {
  res.status(404).json({ error: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
async function startServer() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await connectDatabase();
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    const { sequelize } = require('./backend/models');
    await sequelize.sync();
    console.log('‚úÖ –ú–æ–¥–µ–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
    await initContacts();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    await initProjects();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await initUsers();
    
    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
      console.log(`üì± –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:${PORT} –≤ –±—Ä–∞—É–∑–µ—Ä–µ`);
      console.log(`üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: database.sqlite`);
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
}

startServer();


