// News System - Dynamic Loading and Display

// uses window.apiUtils; provide fallback if –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω utils.js
if (!window.apiUtils) {
    (function(){
        function getApiBase(){ try { return window.API_BASE || ''; } catch(_) { return ''; } }
        async function fetchNoCacheJSON(url){ const ts = Date.now(); const sep = url.includes('?') ? '&' : '?'; const res = await fetch(`${url}${sep}ts=${ts}`, { cache: 'no-store' }); if(!res.ok) throw new Error(`HTTP ${res.status}`); return res.json(); }
        function safeGet(obj, path, fb){ try { return path.split('.').reduce((a,k)=> (a&&a[k]!==undefined?a[k]:undefined), obj) ?? fb; } catch(_) { return fb; } }
        window.apiUtils = { getApiBase, fetchNoCacheJSON, safeGet };
    })();
}

class NewsSystem {
    constructor() {
        this.newsData = null;
        this.currentPage = 1;
        this.newsPerPage = 6;
        this.init();
    }

    async init() {
        try {
            await this.loadNewsData();
            this.renderNews();
            this.setupEventListeners();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error);
            this.showError();
        }
    }

    async loadNewsData() {
        try {
            const apiBase = window.apiUtils?.getApiBase() || '';
            const apiData = await window.apiUtils.fetchNoCacheJSON(`${apiBase}/api/news`);
            this.newsData = { news: apiData.data || apiData };
            console.log('[News] API loaded:', this.newsData);
            return;
        } catch (error) {
            console.warn('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º JSON —Ñ–∞–π–ª:', error);
        }

        try {
            // Fallback - JSON —Ñ–∞–π–ª
            const response = await fetch('src/news-data.json');
            if (!response.ok) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–µ–π');
            }
            this.newsData = await response.json();
        } catch (error) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å JSON —Ñ–∞–π–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', error);
            // Fallback - –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            this.newsData = {
                "news": [
                    {
                        "id": 1,
                        "title": "–í –°–º–æ–ª–µ–Ω—Å–∫–µ –∑–∞–ø—É—â–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —É–º–Ω—ã—Ö —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–≤",
                        "excerpt": "–ù–∞ 10 –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞—Ö –≥–æ—Ä–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å–≤–µ—Ç–æ—Ñ–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–≥—É–ª–∏—Ä—É—é—Ç –≤—Ä–µ–º—è —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ –¥–≤–∏–∂–µ–Ω–∏—è. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ 30%.",
                        "content": "–°–µ–≥–æ–¥–Ω—è –≤ –°–º–æ–ª–µ–Ω—Å–∫–µ —Å–æ—Å—Ç–æ—è–ª—Å—è –∑–∞–ø—É—Å–∫ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–≤. –ü—Ä–æ–µ–∫—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –¶–µ–Ω—Ç—Ä–æ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –°–º–æ–ª–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã \"–£–º–Ω—ã–π –≥–æ—Ä–æ–¥\".",
                        "date": "2025-01-15",
                        "category": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
                        "tags": ["–£–º–Ω—ã–µ —Å–≤–µ—Ç–æ—Ñ–æ—Ä—ã", "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–°–º–æ–ª–µ–Ω—Å–∫", "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"],
                        "featured": true,
                        "image": "üö¶"
                    },
                    {
                        "id": 2,
                        "title": "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –∫–∞–º–µ—Ä—ã –Ω–∞ –æ–ø–∞—Å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–∞—Ö",
                        "excerpt": "–í —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–≤—ã—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 15 –Ω–æ–≤—ã—Ö –∫–∞–º–µ—Ä –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è –Ω–∞ –∞–≤–∞—Ä–∏–π–Ω–æ-–æ–ø–∞—Å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–∞—Ö –¥–æ—Ä–æ–≥.",
                        "content": "–¶–û–î–î –°–º–æ–ª–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É –ø–æ –ø–æ–≤—ã—à–µ–Ω–∏—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è. –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ 15 –Ω–æ–≤—ã—Ö –∫–∞–º–µ—Ä –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è –Ω–∞ –Ω–∞–∏–±–æ–ª–µ–µ –∞–≤–∞—Ä–∏–π–Ω–æ-–æ–ø–∞—Å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–∞—Ö –¥–æ—Ä–æ–≥ —Ä–µ–≥–∏–æ–Ω–∞.",
                        "date": "2025-01-12",
                        "category": "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
                        "tags": ["–ö–∞–º–µ—Ä—ã", "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ"],
                        "featured": false,
                        "image": "üìπ"
                    }
                ]
            };
        }
    }

    renderNews() {
        const newsGrid = document.querySelector('.news-grid');
        if (!newsGrid) return;

        console.log('Rendering news, data:', this.newsData);
        
        if (!this.newsData || !this.newsData.news) {
            console.error('No news data available');
            return;
        }

        const startIndex = (this.currentPage - 1) * this.newsPerPage;
        const endIndex = startIndex + this.newsPerPage;
        const newsToShow = this.newsData.news.slice(startIndex, endIndex);

        console.log('News to show:', newsToShow);

        newsGrid.innerHTML = '';

        newsToShow.forEach((news, index) => {
            const newsCard = this.createNewsCard(news, index);
            newsGrid.appendChild(newsCard);
        });

        this.updatePagination();
    }

    createNewsCard(news, index) {
        const article = document.createElement('article');
        article.className = `news-card ${news.isFeatured ? 'featured' : ''}`;
        
        const categoryClass = this.getCategoryClass(news.category);
        const date = news.publishedAt || news.date || new Date().toISOString();
        const tags = news.tags || [];
        const cover = window.apiUtils?.resolveMediaUrl ? window.apiUtils.resolveMediaUrl(news.image || news.cover || news.images || news.imageUrl) : (news.image || news.cover || (Array.isArray(news.images) && news.images[0]) || news.imageUrl || '');
        
        article.innerHTML = `
            <div class="news-image">
                ${cover ? `<img src="${cover}" alt="${news.title || '–ù–æ–≤–æ—Å—Ç—å'}" loading="lazy">` : ''}
                <div class="news-category ${categoryClass}">${this.getCategoryName(news.category)}</div>
            </div>
            <div class="news-content">
                <div class="news-meta">
                    <time datetime="${date}">${this.formatDate(date)}</time>
                    ${tags.length > 0 ? `<span class="news-tag">${tags[0]}</span>` : ''}
                </div>
                <h3 class="news-title">${news.title}</h3>
                <p class="news-excerpt">${news.excerpt}</p>
                <a href="news-detail.html?id=${news.id}" class="news-link" target="_blank">–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ</a>
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
        article.style.animationDelay = `${index * 0.1}s`;

        return article;
    }

    getCategoryClass(category) {
        const categoryMap = {
            '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏': 'technology',
            '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å': 'safety',
            '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç': 'transport',
            '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞': 'infrastructure',
            '–≠–∫–æ–ª–æ–≥–∏—è': 'ecology',
            '–ú–æ–±–∏–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã': 'mobile',
            '–î–æ—Ä–æ–∂–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å': 'safety',
            '–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è': 'digital',
            'technology': 'technology',
            'safety': 'safety',
            'infrastructure': 'infrastructure',
            'general': 'general'
        };
        return categoryMap[category] || 'default';
    }

    getCategoryName(category) {
        const categoryMap = {
            'technology': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
            'safety': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
            'infrastructure': '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
            'transport': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
            'ecology': '–≠–∫–æ–ª–æ–≥–∏—è',
            'mobile': '–ú–æ–±–∏–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã',
            'digital': '–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è',
            'general': '–û–±—â–µ–µ',
            '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
            '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
            '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞': '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
            '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç': '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
            '–≠–∫–æ–ª–æ–≥–∏—è': '–≠–∫–æ–ª–æ–≥–∏—è',
            '–ú–æ–±–∏–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã': '–ú–æ–±–∏–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã',
            '–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è': '–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è',
            '–û–±—â–µ–µ': '–û–±—â–µ–µ'
        };
        return categoryMap[category] || category || '–û–±—â–µ–µ';
    }

    formatDate(dateString) {
        const date = new Date(dateString);
        const options = { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
        };
        return date.toLocaleDateString('ru-RU', options);
    }

    updatePagination() {
        const totalPages = Math.ceil(this.newsData.news.length / this.newsPerPage);
        const paginationInfo = document.querySelector('.pagination-info');
        const prevBtn = document.querySelector('.pagination-btn:first-child');
        const nextBtn = document.querySelector('.pagination-btn:last-child');

        if (paginationInfo) {
            paginationInfo.textContent = `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${this.currentPage} –∏–∑ ${totalPages}`;
        }

        if (prevBtn) {
            prevBtn.disabled = this.currentPage === 1;
        }

        if (nextBtn) {
            nextBtn.disabled = this.currentPage === totalPages;
        }
    }

    setupEventListeners() {
        const prevBtn = document.querySelector('.pagination-btn:first-child');
        const nextBtn = document.querySelector('.pagination-btn:last-child');

        if (prevBtn) {
            prevBtn.addEventListener('click', () => {
                if (this.currentPage > 1) {
                    this.currentPage--;
                    this.renderNews();
                    this.scrollToTop();
                }
            });
        }

        if (nextBtn) {
            nextBtn.addEventListener('click', () => {
                const totalPages = Math.ceil(this.newsData.news.length / this.newsPerPage);
                if (this.currentPage < totalPages) {
                    this.currentPage++;
                    this.renderNews();
                    this.scrollToTop();
                }
            });
        }
    }

    scrollToTop() {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    }

    showError() {
        const newsGrid = document.querySelector('.news-grid');
        if (newsGrid) {
            newsGrid.innerHTML = `
                <div class="error-message">
                    <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π</h3>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</p>
                </div>
            `;
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ ID (–¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    async getNewsById(id) {
        try {
            const apiBase = window.apiUtils?.getApiBase() || '';
            const item = await window.apiUtils.fetchNoCacheJSON(`${apiBase}/api/news/${id}`);
            // –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞
            return item?.data || item;
        } catch (e) {
            return this.newsData?.news?.find(n => String(n.id) === String(id));
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Ö–æ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    getRelatedNews(currentId, limit = 3) {
        return this.newsData.news
            .filter(news => news.id !== parseInt(currentId))
            .slice(0, limit);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –Ω–æ–≤–æ—Å—Ç–µ–π
document.addEventListener('DOMContentLoaded', () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–æ–≤–æ—Å—Ç–µ–π
    if (document.querySelector('.news-grid')) {
        window.newsSystem = new NewsSystem();
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
async function loadNewsDetail() {
    const urlParams = new URLSearchParams(window.location.search);
    const newsId = urlParams.get('id');
    
    if (!newsId) {
        console.error('ID –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ —É–∫–∞–∑–∞–Ω');
        return;
    }

    try {
        // —Å–Ω–∞—á–∞–ª–∞ –∏–∑ API
        const apiBase = window.apiUtils?.getApiBase() || '';
        let news = null;
        try {
            const item = await window.apiUtils.fetchNoCacheJSON(`${apiBase}/api/news/${newsId}`);
            news = item?.data || item;
        } catch (_) {}
        if (!news) {
            // fallback JSON
            const response = await fetch('src/news-data.json');
            const data = await response.json();
            news = data.news.find(item => item.id === parseInt(newsId));
        }
        if (!news) {
            console.error('–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        console.log('Loaded news data:', news);
        renderNewsDetail(news);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏:', error);
    }
}

function renderNewsDetail(news) {
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.title = `${news.title} - –¶–û–î–î –°–º–æ–ª–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
    const breadcrumb = document.querySelector('.breadcrumb');
    if (breadcrumb) {
        breadcrumb.innerHTML = `
            <a href="index.html">–ì–ª–∞–≤–Ω–∞—è</a>
            <span>‚Üí</span>
            <a href="news.html">–ù–æ–≤–æ—Å—Ç–∏</a>
            <span>‚Üí</span>
            <span>${news.title}</span>
        `;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    const newsMeta = document.querySelector('.news-meta');
    if (newsMeta) {
        const date = news.date || news.publishedAt || news.createdAt;
        const category = news.category || '–û–±—â–µ–µ';
        newsMeta.innerHTML = `
            <time datetime="${date}">${formatDate(date)}</time>
            <span class="news-category">${category}</span>
            ${news.featured ? '<span class="news-tag">–ì–ª–∞–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å</span>' : ''}
        `;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const newsTitle = document.querySelector('.news-title');
    if (newsTitle) {
        newsTitle.textContent = news.title;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    const newsExcerpt = document.querySelector('.news-excerpt');
    if (newsExcerpt) {
        newsExcerpt.textContent = news.excerpt;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const newsImageWrap = document.querySelector('.news-image');
    if (newsImageWrap) {
        const cover = window.apiUtils?.resolveMediaUrl ? window.apiUtils.resolveMediaUrl(news.image || news.cover || news.imageUrl) : (news.image || news.cover || news.imageUrl || '');
        if (cover && !cover.startsWith('üö¶') && !cover.startsWith('üìπ')) {
            // –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∑–∞–º–µ–Ω–∏–º placeholder
            newsImageWrap.innerHTML = `<img src="${cover}" alt="${news.title}" loading="lazy">`;
        } else if (news.image && news.image.startsWith('üö¶')) {
            // –µ—Å–ª–∏ —ç—Ç–æ —ç–º–æ–¥–∑–∏, –æ—Å—Ç–∞–≤–ª—è–µ–º placeholder
            newsImageWrap.innerHTML = `
                <div class="news-image-placeholder">
                    <span class="image-icon">${news.image}</span>
                    <p>${news.title}</p>
                </div>
            `;
        }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    const newsContent = document.querySelector('.news-content');
    if (newsContent) {
        newsContent.innerHTML = convertMarkdownToHTML(news.content || news.body || '');
        // –í–ª–æ–∂–µ–Ω–∏—è (—Ñ–∞–π–ª—ã) —É–±—Ä–∞–Ω—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        // –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É–±—Ä–∞–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–≥–∏
    const newsTags = document.querySelector('.news-tags');
    if (newsTags) {
        newsTags.innerHTML = news.tags.map(tag => 
            `<span class="tag">${tag}</span>`
        ).join('');
    }
}

function formatDate(dateString) {
    if (!dateString) return '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    
    const date = new Date(dateString);
    if (isNaN(date.getTime())) {
        return '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    }
    
    const options = { 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric' 
    };
    return date.toLocaleDateString('ru-RU', options);
}

function convertMarkdownToHTML(text) {
    // –ü—Ä–æ—Å—Ç–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä Markdown –≤ HTML
    return text
        .replace(/^## (.*$)/gim, '<h2>$1</h2>')
        .replace(/^### (.*$)/gim, '<h3>$1</h3>')
        .replace(/^\- (.*$)/gim, '<li>$1</li>')
        .replace(/^> (.*$)/gim, '<blockquote><p>$1</p></blockquote>')
        .replace(/\n\n/g, '</p><p>')
        .replace(/^(.*)$/gim, '<p>$1</p>')
        .replace(/<p><h2>/g, '<h2>')
        .replace(/<\/h2><\/p>/g, '</h2>')
        .replace(/<p><h3>/g, '<h3>')
        .replace(/<\/h3><\/p>/g, '</h3>')
        .replace(/<p><li>/g, '<li>')
        .replace(/<\/li><\/p>/g, '</li>')
        .replace(/<p><blockquote>/g, '<blockquote>')
        .replace(/<\/blockquote><\/p>/g, '</blockquote>')
        .replace(/<li>(.*?)<\/li>/g, '<ul><li>$1</li></ul>')
        .replace(/<\/ul><ul>/g, '');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    if (window.location.pathname.includes('news-detail.html')) {
        loadNewsDetail();
    }
});
