const { connectDatabase } = require('../backend/config/database');
const { User, Fine, Evacuation, TrafficLight, Accident, News, Document, Project, Transport, Service } = require('../backend/models');

async function initializeDatabase() {
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    await connectDatabase();
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    const adminUser = await User.findOrCreate({
      where: { username: 'admin' },
      defaults: {
        username: 'admin',
        email: 'admin@codd-smolensk.ru',
        password: 'admin123',
        role: 'admin',
        fullName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã'
      }
    });
    
    const editorUser = await User.findOrCreate({
      where: { username: 'editor' },
      defaults: {
        username: 'editor',
        email: 'editor@codd-smolensk.ru',
        password: 'editor123',
        role: 'editor',
        fullName: '–†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
      }
    });
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏
    console.log('üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥...');
    
    const services = [
      {
        title: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ-—Å–º–µ—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
        description: '–î–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤',
        category: 'documentation',
        price: '–æ—Ç 50 000 ‚ÇΩ',
        isActive: true,
        order: 1,
        formFields: [
          { type: 'text', label: '–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞', name: 'objectName', required: true, placeholder: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞' },
          { type: 'text', label: '–ê–¥—Ä–µ—Å', name: 'address', required: true, placeholder: '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞' },
          { type: 'tel', label: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω', name: 'phone', required: true, placeholder: '+7 (xxx) xxx-xx-xx' },
          { type: 'email', label: 'Email', name: 'email', required: false, placeholder: 'example@email.com' },
          { type: 'textarea', label: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è', name: 'requirements', required: false, placeholder: '–û–ø–∏—à–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è' }
        ]
      },
      {
        title: '–ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–≤—ã—à–∫–∏',
        description: '–î–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —Å–≤–µ—Ç–æ—Ñ–æ—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤',
        category: 'equipment',
        price: '–æ—Ç 3 000 ‚ÇΩ/–¥–µ–Ω—å',
        isActive: true,
        order: 2,
        formFields: [
          { type: 'text', label: '–í—ã—Å–æ—Ç–∞ —Ä–∞–±–æ—Ç', name: 'height', required: true, placeholder: '–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –≤ –º–µ—Ç—Ä–∞—Ö' },
          { type: 'date', label: '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç', name: 'startDate', required: true },
          { type: 'number', label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π', name: 'days', required: true, placeholder: '1', min: 1, max: 30 },
          { type: 'tel', label: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω', name: 'phone', required: true, placeholder: '+7 (xxx) xxx-xx-xx' },
          { type: 'text', label: '–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞', name: 'address', required: true, placeholder: '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞' }
        ]
      },
      {
        title: '–í—ã–∑–æ–≤ —ç–≤–∞–∫—É–∞—Ç–æ—Ä–∞',
        description: '–ë—ã—Å—Ç—Ä–æ–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è',
        category: 'evacuation',
        price: '–æ—Ç 2 500 ‚ÇΩ',
        isActive: true,
        order: 3,
        formFields: [
          { type: 'text', label: '–ê–¥—Ä–µ—Å —ç–≤–∞–∫—É–∞—Ü–∏–∏', name: 'address', required: true, placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å' },
          { type: 'text', label: '–ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è', name: 'carModel', required: true, placeholder: 'Toyota Camry 2020' },
          { type: 'text', label: '–ì–æ—Å–Ω–æ–º–µ—Ä', name: 'licensePlate', required: true, placeholder: '–ê123–ë–í77' },
          { type: 'tel', label: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω', name: 'phone', required: true, placeholder: '+7 (xxx) xxx-xx-xx' },
          { type: 'textarea', label: '–ü—Ä–∏—á–∏–Ω–∞ —ç–≤–∞–∫—É–∞—Ü–∏–∏', name: 'reason', required: false, placeholder: '–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —ç–≤–∞–∫—É–∞—Ü–∏–∏' }
        ]
      }
    ];
    
    for (const serviceData of services) {
      await Service.findOrCreate({
        where: { title: serviceData.title },
        defaults: serviceData
      });
    }
    
    console.log('‚úÖ –£—Å–ª—É–≥–∏ —Å–æ–∑–¥–∞–Ω—ã');
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É —Å–æ–∑–¥–∞–Ω—ã');
    
    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
    console.log('üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123');
    console.log('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–æ—Ä: editor / editor123');
    console.log('\nüóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: database.sqlite');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initializeDatabase();
